# BASE UI
# makeCommands:
ColorColumn: ''
Conceal: ''
Cursor: 'bg deeppink'
CursorColumn: ''
CursorIM: ''
CursorLine: '- cursorline'
CursorLineNR: 'cursorlinenumber'
DiffAdd: ''
DiffChange: ''
DiffDelete: ''
DiffText: 'fg deeppink'
Directory: ''
ErrorMsg: 'fg deeppink'
FoldColumn: ''
Folded: 'teal cursorline'
IncSearch: ''
LineNr: 'linenumber'
MatchParen: '- search'
ModeMsg: ''
MoreMsg: ''
SignColumn: 'linenumber bg'
VertSplit: 'linenumber bg'


# listchars
NonText: 'cursorlinenumber'
SpecialKey: 'cursorlinenumber'

# these are the tildes at the end which I've opted
# to make disappear, but may not be preferred
# opting to hide these for the moment...
EndOfBuffer: 'bg bg'


Normal: 'fg bg'
PMenu: ''
PMenuSel: ''
PmenuSbar: ''
PmenuThumb: ''
Question: ''
Search: '- search'
SpellBad: ''
SpellCap: ''
SpellLocal: ''
SpellRare: ''
StatusLine: 'comment bg'
StatusLineNC: 'linenumber bg'
TabLine: ''
TabLineFill: ''
TabLineSel: ''
Title: ''
Visual: '- highlight'
VisualNOS: ''
WarningMsg: ''
WildMenu: ''

# BASE SYNTAX
Boolean: 'orange' # Constant
Character: '' # Constant
Comment: 'comment - i'
Conditional: 'blue' # Statement
Constant: 'orange'
Debug: '' # Special
Define: 'teal' # PreProc
Delimiter: 'lightgray' # Special
Error: 'fg deeppink'
Exception: '' # Statement
Float: '' # Constant
Function: 'yellow' # Identifier
Identifier: 'teal'
Ignore: ''
Include: '' # PreProc
Keyword: '' # Statement
Label: '' # Statement
Macro: '' # PreProc
Number: 'orange' # Constant
Operator: 'lightgray' # Statement
PreCondit: '' # PreProc
PreProc: 'blue'
Repeat: 'blue' # Statement
Special: 'blue'
SpecialChar: '' # Special
SpecialComment: '' # Special
Statement: 'teal'
StorageClass: '' # Type
String: 'string' # Constant
Structure: '' # Type
Tag: '' # Special
Todo: 'yellow'
Type: 'lightblue'
Typedef: '' # Type
Underlined: ''

# JavaScript
jsArrowFuncArgs: 'lightblue'
jsArrowFunction: 'fg'
jsAsyncKeyword: 'blue'
jsBooleanFalse: 'orange'
jsBooleanTrue: 'orange'
jsBraces: 'lightgray'
jsCatch: 'blue'
jsClassKeyword: 'teal'
jsClassFuncName: 'teal'
jsDestructuringBraces: 'lightgray'
jsException: 'blue'
jsExceptions: 'yellow'
jsExport: 'blue'
jsExportDefault: 'blue'
jsExtendsKeyword: 'blue'
jsFrom: 'blue'
jsForAwait: 'blue'
jsFuncArgs: 'lightblue'
jsFuncBraces: 'lightgray'
jsFuncCall: 'yellow'
jsFuncName: 'yellow'
jsFuncParens: 'lightgray'
jsFunction: 'teal'
jsGlobalNodeObjects: 'blue'
jsGlobalObjects: 'yellow'
jsIfElseBraces: 'lightgray'
jsImport: 'blue'
jsLabel: 'blue'
jsModuleAs: 'blue'
jsModuleAsterisk: 'orange'
jsModuleBraces: 'lightgray'
jsNoise: 'lightgray'
jsNull: 'orange'
jsNumber: 'orange'
jsObjectBraces: 'lightgray'
jsObjectColon: 'lightgray'
jsObjectProp: 'blue'
jsObjectSeparator: 'lightgray'
jsObjectValue: 'lightblue'
jsOperator: 'lightgray'
jsParens: 'lightgray'
jsRepeat: 'blue'
jsReturn: 'blue'
jsStatement: 'blue'
jsStorageClass: 'teal'
jsSwitchCase: 'blue'
jsTemplateBraces: 'pink'
jsTry: 'blue'
jsThis: 'deeppink'
jsUndefined: 'orange'
jsEnvComment: 'lightgray'

# JSON
jsonBoolean: 'burntorange'
jsonBraces: 'fg'
jsonFold: 'fg'
jsonKeyword: 'jsonKeyword'
jsonNoise: 'fg'
jsonString: 'string'

# YAML
yamlAnchor: 'teal'
yamlBlockCollectionItemStart: 'lightgray'
yamlBlockMappingKey: 'lightblue'
yamlBlockMappingMerge: 'teal'
yamlDocumentStart: 'lightgray'
yamlEscape: 'orange'
yamlFlowCollection: 'lightgray'
yamlFlowIndicator: 'lightgray'
yamlFlowMappingKey: 'lightblue'
yamlKeyValueDelimiter: 'fg'
yamlMappingKeyStart: 'yellow'
yamlSingleEscape: 'orange'
yamlAlias: 'pink'
yamlNodeTag: 'deeppink'
# jsonKeywordMatch: 'string'
# jsonQuote: 'lightblue'

# XML/React/HTML
xmlAttrib: 'lightblue'
xmlEndTag: 'yellow'
xmlEqual: 'lightgray'
xmlTag: 'lightgray'
xmlTagName: 'yellow'

# vim
VimHiAttrib: 'pink'
vimAddress: 'pink'
vimAutoCmd: 'blue'
vimAutoEvent: 'lightblue'
vimBracket: 'pink'
vimCommand: 'blue'
vimCommentTitle: 'lightgray'
vimContinue: 'lightgray'
vimGroup: 'teal'
vimHiCTerm: 'lightblue'
vimHiCtermFgBg: 'lightblue'
vimHiGroup: 'teal'
vimHiGui: 'lightblue'
vimHiGuiFgBg: 'lightblue'
vimHiKeyList: 'lightblue'
vimLet: 'teal'
vimMap: 'blue'
vimMapMod: 'pink'
vimMapModKey: 'pink'
vimNotation: 'pink'
vimNumber: 'orange'
vimOperParen: 'lightgray'
vimOption: 'lightblue'
vimParenSep: 'lightgray'
vimSep: 'lightgray'
vimSetSep: 'lightgray'
vimSubst1: 'lightblue'
vimSubstDelim: 'pink'
vimSubstFlags: 'pink'
vimSynType: 'yellow'
vimUserFunc: 'yellow'
# vimUsrCmd: 'yellow'
vimVar: 'fg'

# groovy
groovyBoolean: 'orange'
groovyClassDecl: 'teal'
groovyELExpr: 'pink'
groovyExceptions: 'blue'
groovyJDKBuiltin: 'teal'
groovyLabel: 'blue'
groovyNumber: 'orange'
groovyParen: 'lightgray'
groovySpecialChar: 'orange'
groovyStatement: 'blue'
groovyStorageClass: 'teal'
groovyType: 'blue'
groovyTypedef: 'deeppink'
groovyUserLabel: 'lightblue'

# markdown
markdownBlockquote: 'lightblue'
markdownBold: 'lightblue - b'
markdownBoldDelimiter: 'lightgray'
markdownCode: 'pink'
markdownCodeDelimiter: 'lightgray'
markdownH1: 'deeppink - b'
markdownH2: 'deeppink - b'
markdownH3: 'deeppink - b'
markdownH4: 'deeppink - b'
markdownH5: 'deeppink - b'
markdownH6: 'deeppink - b'
markdownHeadingDelimiter: 'deeppink - b'
markdownHeadingRule: 'lightgray'
markdownId: 'teal'
markdownIdDeclaration: 'teal'
markdownItalic: 'lightblue - i'
markdownItalicDelimiter: 'lightgray'
markdownLinkText: 'string'
markdownListMarker: 'lightblue'
markdownOrderedListMarker: 'lightblue'
markdownUrl: 'blue'
markdownUrlDelimiter: 'lightgray'
markdownUrlTitleDelimiter: 'lightgray'

# help section delim
helpSectionDelim: 'lightgray'
helpHeadline: 'fg - b'
helpHeader: 'pink'
helpHyperTextJump: 'teal'
helpOption: 'string'

# terraform
terraBraces: 'lightgray'
terraBrackets: 'lightgray'
terraSection: 'blue'
terraStringInterp: 'pink'

# zsh
zshCommands: 'blue'
zshDeref: 'pink'
zshOldSubst: 'teal'
zshOptStart: 'lightblue'
zshQuoted: 'orange'
zshShortDeref: 'pink'
zshSubstDelim: 'pink'
zshTypes: 'teal'
zshKeyword: 'teal'
zshKSHFunction: 'yellow'
zshDelimiter: 'blue'

# bash
bashStatement: 'yellow'
shOption: 'teal'
shVariable: 'teal'
shStatement: 'yellow'
shDerefSimple: 'pink'
shCmdSubRegion: 'pink'
shSpecialNoZS: 'orange'
shTestOpr: 'lightblue'
shDeref: 'pink'
shDerefVar: 'pink'
shCaseLabel: 'orange'
shSnglCase: 'teal'
shDblBrace: 'lightgray'

# php
phpStructure: 'teal'
phpKeyword: 'teal'
phpVarSelector: 'lightblue'
phpIdentifier: 'lightblue'
phpType: 'orange'
phpStorageClass: 'teal'
phpDefine: 'teal'
phpSpecialFunction: 'yellow'
phpComparison: 'lightgray'
phpException: 'blue'
phpMemberSelector: 'lightgray'
phpStatement: 'blue'

# python
pythonBuiltinObj: 'teal'
pythonBuiltinType: 'yellow'
pythonClassVar: 'deeppink'
pythonDecorator: 'pink'
pythonDottedName: 'pink'
pythonExClass: 'lightblue'
pythonException: 'blue'
pythonFunction: 'yellow'
pythonImport: 'blue'
pythonNumber: 'orange'
pythonOperator: 'pink'
pythonStatement: 'teal'
pythonStrInterpRegion: 'pink'
pythonTodo: 'yellow'

# ruby
erubyDelimiter: 'pink'
rubyAttribute: 'string'
rubyBlock: 'blue'
rubyBlockParameter: 'lightblue'
rubyClass: 'blue'
rubyClassName: 'teal'
rubyConstant: 'deeppink'
rubyControl: 'blue'
rubyCurlyBlockDelimiter: 'lightgray'
rubyDefine: 'blue'
rubyDoBlock: 'yellow'
rubyInclude: 'blue'
rubyInstanceVariable: 'teal'
rubyInterpolationDelimiter: 'pink'
rubyLocalVariableOrMethod: 'yellow'
rubyModule: 'blue'
rubyModuleName: 'teal'
rubyPseudoVariable: 'deeppink'
rubyStringDelimiter: 'string'
rubySymbol: 'lightblue'
rubyTodo: 'teal'
# weird, these two refuse to work?
# rubyKeywordAsMethod: 'yellow'

# terraform
terraModule: 'blue'
terraResource: 'blue'
terraProvisioner: 'blue'
terraResourceTypeBI: 'teal'
terraResourceTypeStr: 'teal'
terraValueVarSubscript: 'pink'
terraValueFunction: 'yellow'
terraValueBool: 'orange'


# ctrlp
CtrlPMatch: 'teal'

# NERD
NERDTreeCWD: 'blue'
NERDTreeDir: 'teal'
NERDTreeDirSlash: 'fg'
NERDTreeFile: 'fg'
NERDTreeOpenable: 'lightgray'
NERDTreeClosable: 'fg'
NERDTreeUp: 'lightgray'
NERDTreeExecFile: 'orange'
NERDTreeLinkFile: 'blue'
NERDTreeLinkTarget: 'pink'

# docker
dockerfileKeyword: 'blue'

# ALE
ALEErrorSign: 'deeppink bg'
ALEWarningSign: 'yellow bg'

# perl
perlFiledescRead: 'pink'
perlFunction: 'blue'
perlFunctionName: 'yellow'
perlMethod: 'yellow'
perlOperator: 'pink'
perlStatementControl: 'blue'
perlStatementFiledesc: 'yellow'
perlStatementRegexp: 'yellow'
perlStatementTime: 'yellow'
perlStatementFlow: 'blue'
perlStatementHash: 'blue'
perlStatementInclude: 'blue'
perlStatementPword: 'yellow'
perlStatementScalar: 'blue'
perlStatementStorage: 'blue'
perlVarPlain: 'lightblue'
perlStatementList: 'yellow'
perlStatementMisc: 'yellow'
perlStatementIndirObj: 'lightgray'

# make
makeIdent: 'teal'
makeCommands: 'fg'

# clojure
clojureKeyword: 'pink'
clojureSpecial: 'teal'
clojureSymbol: 'fg'
clojureException: 'blue'

# Go
goBuiltins: 'yellow'
goConditional: 'blue'
goConstants: 'orange'
goConst: 'teal'
goDeclType: 'pink'
goDeclaration: 'teal'
goDirective: 'blue'
goImport: 'blue'
goLabel: 'blue'
goPackage: 'blue'
goSignedInts: 'pink'
goStatement: 'pink'
goTodo: 'yellow'
goType: 'pink'
goUnsignedInts: 'pink'
goVar: 'teal'

# TypeScript
typescriptAssign: 'lightgray'
typescriptBraces: 'lightgray'
typescriptCall: 'lightblue'
typescriptClassName: 'yellow'
typescriptGlobal: 'yellow'
typescriptMember: 'fg'
typescriptObjectLabel: 'fg'
typescriptParens: 'lightgray'
typescriptStatementKeyword: 'blue'
typescriptTemplateSB: 'pink'
typescriptTypeReference: 'yellow'
typescriptTypeAnnotation: 'lightgray'

# Spleunker plugin
SpelunkerSpellBad: 'fg deeppink u'
SpelunkerComplexOrCompoundWord: 'fg deeppink u'
